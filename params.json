{
  "name": "AnimmexAPI",
  "tagline": ".NET API for Animmex",
  "body": "AnimmexAPI\r\n==========\r\n[![GitHub stars](https://img.shields.io/github/stars/kade-robertson/AnimmexAPI.svg)](https://github.com/kade-robertson/AnimmexAPI/stargazers) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/kade-robertson/AnimmexAPI/master/LICENSE.md)\r\n\r\nAnimmex is a not-so-popular website hosted in Russia that provides a platforrm\r\nto update and watch videos of all kinds. However, it is ad-riddled and you are\r\nforced to use it through the browser. I am making this API simply as an\r\nexperiment and to increase the platforms on which the site can be used.\r\n\r\nThe API has been built in VS as a portable class library that is compatible with\r\napplications on iOS, Android and Windows, and with Xamarin. The actual supported\r\nenvironments are as follows:\r\n\r\n-   .NET Framework 4.5\r\n\r\n-   ASP.NET Core 5.0\r\n\r\n-   Windows 8\r\n\r\n-   Windows Phone 8.1\r\n\r\n-   Xamarin.Android\r\n\r\n-   Xamarin.iOS\r\n\r\n-   Xamarin.iOS (Classic)\r\n\r\nDocumentation\r\n=============\r\n\r\nAll of the functions and classes have XML documentation supported by Xamarin,\r\nalthough a wiki with more information will be available in the future.\r\n\r\nExample Usage\r\n=============\r\n\r\nAs of the most recent build, there is a whole 2 functions available for usage!\r\nHereâ€™s an example. You might want to look at the structure of AnimmexVideo\r\nobject to see what you can do.\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nvar api = new AnimmexClient();\r\nvar videos1 = await api.GetRecentlyViewed();\r\nforeach (AnimmexVideo video in videos1) {\r\n    MessageBox.Show($\"Title: {video.Title}\" + Environment.NewLine +\r\n                    $\"Views: {video.Views}\" + Environment.NewLine +\r\n                    $\"Length: {video.Duration}\" + Environment.NewLine +\r\n                    $\"Rating: {video.Rating}%\");\r\n}\r\nvar videos2 = await api.Search(\"Simpsons\", VideoCategory.All, SortBy.Duration, UploadPeriod.ThisMonth);\r\nMessageBox.Show($\"Results for \\\"Simpsons\\\": {videos2.Count}\")\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nNotes\r\n=====\r\n\r\nThis project is simply as an experiment for myself, expect this code not to\r\nnecessarily be held to production standards or the like. I will however mark\r\nthis under the MIT License so it is available to be used freely.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}